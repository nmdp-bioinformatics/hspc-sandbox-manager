# This project uses the GitFlow Workflow as defined here:
#   https://www.atlassian.com/git/tutorials/comparing-workflows#GitFlow-workflow
image: hspconsortium/hspc-ubuntu-base
clone:           # the 'clone' section
  depth: 1       # the depth, in this case the clone will contain last one commits

pipelines:
  default:
    - step:
        script:
          - echo "Please use a GitFlow branch"
          - exit 1;
  branches:
    develop:
      - step:
          script:
            - export DOCKER_PUSH=true; echo "DOCKER_PUSH - " $DOCKER_PUSH
            - export PROJECT_REPO="nexus.hspconsortium.org:18083/hspc"; echo "PROJECT_REPO - " $PROJECT_REPO
            - export PROJECT_NAME=$(cat package.json | jq --raw-output '.name'); echo "PROJECT_NAME - " $PROJECT_NAME
            - export PROJECT_VERSION=$(cat package.json | jq --raw-output '.version'); echo "PROJECT_VERSION - " $PROJECT_VERSION
            - export PROJECT_PORT=$(cat package.json | jq --raw-output '.config.port'); echo "PROJECT_PORT - " $PROJECT_PORT
            - export IMAGE_NAME=$PROJECT_REPO/$PROJECT_NAME:$PROJECT_VERSION; echo "IMAGE_NAME - " $IMAGE_NAME
            - export CURRENT_ENV=test; echo "CURRENT_ENV - " $CURRENT_ENV
            - export FAMILY_NAME=$PROJECT_NAME
            - . ci-1-prepare-sources.sh
            - . ci-2-docker-image.sh
            - . ci-3-aws-update.sh
    feature/*:
      - step:
          caches:
            - node
          script:
            - npm install
    release/*:
      - step:
          caches:
            - node
          script:
            - npm install
    hotfix/*:
      - step:
          caches:
            - node
          script:
            - npm install
    master:
      - step:
          caches:
            - node
          script:
            - export DOCKER_PUSH=true; echo "DOCKER_PUSH - " $DOCKER_PUSH
            - export PROJECT_REPO="nexus.hspconsortium.org:18083/hspc"; echo "PROJECT_REPO - " $PROJECT_REPO
            - export PROJECT_NAME=$(cat package.json | jq --raw-output '.name'); echo "PROJECT_NAME - " $PROJECT_NAME
            - export PROJECT_VERSION=$(cat package.json | jq --raw-output '.version'); echo "PROJECT_VERSION - " $PROJECT_VERSION
            - export PROJECT_PORT=$(cat package.json | jq --raw-output '.config.port'); echo "PROJECT_PORT - " $PROJECT_PORT
            - export IMAGE_NAME=$PROJECT_REPO/$PROJECT_NAME:$PROJECT_VERSION; echo "IMAGE_NAME - " $IMAGE_NAME
            - export CURRENT_ENV=prod; echo "CURRENT_ENV - " $CURRENT_ENV
            - export FAMILY_NAME="$PROJECT_NAME-prod"
            - . ci-1-prepare-sources.sh
            - . ci-2-docker-image.sh
            - . ci-3-aws-update.sh
options:
  docker: true